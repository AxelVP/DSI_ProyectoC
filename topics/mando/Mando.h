// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Mando.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _FAST_DDS_GENERATED_MANDO_H_
#define _FAST_DDS_GENERATED_MANDO_H_


#include <fastrtps/utils/fixed_size_string.hpp>

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(Mando_SOURCE)
#define Mando_DllAPI __declspec( dllexport )
#else
#define Mando_DllAPI __declspec( dllimport )
#endif // Mando_SOURCE
#else
#define Mando_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define Mando_DllAPI
#endif // _WIN32

namespace eprosima {
namespace fastcdr {
class Cdr;
} // namespace fastcdr
} // namespace eprosima


/*!
 * @brief This class represents the structure Mando defined by the user in the IDL file.
 * @ingroup MANDO
 */
class Mando
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport Mando();

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~Mando();

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object Mando that will be copied.
     */
    eProsima_user_DllExport Mando(
            const Mando& x);

    /*!
     * @brief Move constructor.
     * @param x Reference to the object Mando that will be copied.
     */
    eProsima_user_DllExport Mando(
            Mando&& x);

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object Mando that will be copied.
     */
    eProsima_user_DllExport Mando& operator =(
            const Mando& x);

    /*!
     * @brief Move assignment.
     * @param x Reference to the object Mando that will be copied.
     */
    eProsima_user_DllExport Mando& operator =(
            Mando&& x);

    /*!
     * @brief Comparison operator.
     * @param x Mando object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const Mando& x) const;

    /*!
     * @brief Comparison operator.
     * @param x Mando object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const Mando& x) const;

    /*!
     * @brief This function sets a value in member j_izq_ver
     * @param _j_izq_ver New value for member j_izq_ver
     */
    eProsima_user_DllExport void j_izq_ver(
            float _j_izq_ver);

    /*!
     * @brief This function returns the value of member j_izq_ver
     * @return Value of member j_izq_ver
     */
    eProsima_user_DllExport float j_izq_ver() const;

    /*!
     * @brief This function returns a reference to member j_izq_ver
     * @return Reference to member j_izq_ver
     */
    eProsima_user_DllExport float& j_izq_ver();

    /*!
     * @brief This function sets a value in member j_der_ver
     * @param _j_der_ver New value for member j_der_ver
     */
    eProsima_user_DllExport void j_der_ver(
            float _j_der_ver);

    /*!
     * @brief This function returns the value of member j_der_ver
     * @return Value of member j_der_ver
     */
    eProsima_user_DllExport float j_der_ver() const;

    /*!
     * @brief This function returns a reference to member j_der_ver
     * @return Reference to member j_der_ver
     */
    eProsima_user_DllExport float& j_der_ver();

    /*!
     * @brief This function sets a value in member j_izq_hor
     * @param _j_izq_hor New value for member j_izq_hor
     */
    eProsima_user_DllExport void j_izq_hor(
            float _j_izq_hor);

    /*!
     * @brief This function returns the value of member j_izq_hor
     * @return Value of member j_izq_hor
     */
    eProsima_user_DllExport float j_izq_hor() const;

    /*!
     * @brief This function returns a reference to member j_izq_hor
     * @return Reference to member j_izq_hor
     */
    eProsima_user_DllExport float& j_izq_hor();

    /*!
     * @brief This function sets a value in member j_der_hor
     * @param _j_der_hor New value for member j_der_hor
     */
    eProsima_user_DllExport void j_der_hor(
            float _j_der_hor);

    /*!
     * @brief This function returns the value of member j_der_hor
     * @return Value of member j_der_hor
     */
    eProsima_user_DllExport float j_der_hor() const;

    /*!
     * @brief This function returns a reference to member j_der_hor
     * @return Reference to member j_der_hor
     */
    eProsima_user_DllExport float& j_der_hor();

    /*!
     * @brief This function sets a value in member p_izq
     * @param _p_izq New value for member p_izq
     */
    eProsima_user_DllExport void p_izq(
            float _p_izq);

    /*!
     * @brief This function returns the value of member p_izq
     * @return Value of member p_izq
     */
    eProsima_user_DllExport float p_izq() const;

    /*!
     * @brief This function returns a reference to member p_izq
     * @return Reference to member p_izq
     */
    eProsima_user_DllExport float& p_izq();

    /*!
     * @brief This function sets a value in member p_der
     * @param _p_der New value for member p_der
     */
    eProsima_user_DllExport void p_der(
            float _p_der);

    /*!
     * @brief This function returns the value of member p_der
     * @return Value of member p_der
     */
    eProsima_user_DllExport float p_der() const;

    /*!
     * @brief This function returns a reference to member p_der
     * @return Reference to member p_der
     */
    eProsima_user_DllExport float& p_der();


    /*!
     * @brief This function returns the maximum serialized size of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function returns the serialized size of a data depending on the buffer alignment.
     * @param data Data which is calculated its serialized size.
     * @param current_alignment Buffer alignment.
     * @return Serialized size.
     */
    eProsima_user_DllExport static size_t getCdrSerializedSize(
            const Mando& data,
            size_t current_alignment = 0);


    /*!
     * @brief This function serializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serialize(
            eprosima::fastcdr::Cdr& cdr) const;

    /*!
     * @brief This function deserializes an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void deserialize(
            eprosima::fastcdr::Cdr& cdr);



    /*!
     * @brief This function returns the maximum serialized size of the Key of an object
     * depending on the buffer alignment.
     * @param current_alignment Buffer alignment.
     * @return Maximum serialized size.
     */
    eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(
            size_t current_alignment = 0);

    /*!
     * @brief This function tells you if the Key has been defined for this type
     */
    eProsima_user_DllExport static bool isKeyDefined();

    /*!
     * @brief This function serializes the key members of an object using CDR serialization.
     * @param cdr CDR serialization object.
     */
    eProsima_user_DllExport void serializeKey(
            eprosima::fastcdr::Cdr& cdr) const;

private:

    float m_j_izq_ver;
    float m_j_der_ver;
    float m_j_izq_hor;
    float m_j_der_hor;
    float m_p_izq;
    float m_p_der;
};

#endif // _FAST_DDS_GENERATED_MANDO_H_